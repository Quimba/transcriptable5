#!/usr/bin/env ruby

require 'typingpool'
require 'optparse'

options = {}
OptionParser.new do |commands|
  commands.banner =  "USAGE: #{File.basename($PROGRAM_NAME)} [--config PATH] [--sandbox]\n"
  commands.on('--sandbox',
              "Collect from the Mechanical Turk test sandbox") do
    options[:sandbox] = true
  end
  commands.on('--config=PATH',
              "Default: ~/.typingpool",
              "A config file") do |path|
    options[:config] = path
  end
  commands.on('--fixture=PATH',
              "Optional. For testing purposes only.",
              "A VCR ficture for running with mock data.") do |fixture|
    require 'typingpool/app/test'
    options[:fixture] = fixture
  end
  commands.on('--help',
              "Display this screen") do
    STDERR.puts commands
    exit
  end
end.parse!

config = Typingpool::App::CLI.config_from_arg(options[:config]) or abort "No config file at '#{options[:config]}'"

if options[:fixture]
  Typingpool::App.vcr_load(options[:fixture], config, true)
  at_exit{ Typingpool::App.vcr_stop }
end

STDERR.puts "Collecting results from Amazon"
Typingpool::Amazon.setup(:sandbox => options[:sandbox], :config => config)
hits = Typingpool::Amazon::HIT.all_approved

STDERR.puts "Looking for local project folders to receive results" unless hits.empty?
Typingpool::App.find_projects_waiting_for_hits(hits, config) do |project, hits|
  assignments_file = Typingpool::App.assignments_file_for_sandbox_status(options[:sandbox], project)
  Typingpool::App.record_approved_hits_in_assignments_file(assignments_file, hits)
  out_file = Typingpool::App.create_transcript(project, assignments_file)
  STDERR.puts "Wrote #{out_file} to local folder #{project.name}."
end
